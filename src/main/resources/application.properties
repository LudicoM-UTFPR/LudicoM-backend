# Application Configuration
spring.application.name=ludicom-backend
server.port=8080

# JPA Configuration (can be overridden via env vars)

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
# Ajustado para PostgreSQL por padrão (pode ser sobrescrito via SPRING_JPA_HIBERNATE_DIALECT)
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:true}
# Postgres Configuration via environment variables
# Exemplo de variáveis usadas pelo docker-compose: POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, POSTGRES_PORT
# Use DB_HOST=db quando a aplicação rodar como outro serviço no mesmo compose. Fora do Docker, use localhost.
# Exemplo de URL resultante: jdbc:postgresql://localhost:5432/ludicom
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.postgresql.Driver}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:dev}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:devpass}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# Logging Configuration
logging.level.com.ludicom.backend=INFO
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN